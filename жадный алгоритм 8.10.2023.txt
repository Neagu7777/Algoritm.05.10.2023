Распишите подробно (и приведите примеры) почему в этой задаче жадный алгоритм не дает точного ответа 
(при желании можете реализовать решение этой задачи при помощи жадного алгоритма):
Классическая задача о рюкзаке
Учитывая стоимость слитков как оптимальный ход для нас, а затем вес, нам нужно положить эти слитки в рюкзак вместимостью 23,
 чтобы получить максимальную общую стоимость в рюкзаке.
Для данной задачи жадный алгоритм не всегда даёт оптимальное решение

Пример, который иллюстрирует, почему жадный алгоритм не всегда даёт оптимальное решение, можно понять на классической задаче
 о рюкзаке (Knapsack problem).

Задача о рюкзаке:

Предположим, у вас есть рюкзак с ограниченной вместимостью (например, 23 килограмма) и набор предметов с определенными 
весами и стоимостями. Задача состоит в том, чтобы определить, какие предметы следует поместить в рюкзак так, 
чтобы получить максимальную суммарную стоимость, не превышая вместимость рюкзака.

Пример:

Представим, у нас есть следующий набор предметов:

Предмет A: Вес - 10 кг, Стоимость - 60
Предмет B: Вес - 20 кг, Стоимость - 100
Предмет C: Вес - 30 кг, Стоимость - 120
И у нас есть рюкзак вместимостью 23 кг.

Жадный алгоритм:

Жадный алгоритм может быть реализован, выбирая предметы с максимальным отношением стоимости к весу.

Выбираем Предмет B: Вес - 20 кг, Стоимость - 100
Осталось место в рюкзаке: 23 - 20 = 3 кг
Выбираем Предмет A: Вес - 10 кг, Стоимость - 60
Итого, жадный алгоритм выбрал Предмет B и Предмет A, общая стоимость - 100 + 60 = 160.

Оптимальное решение:

Оптимальным решением в данном случае будет выбор Предмета C, который не влезает в рюкзак полностью, 
но имеет высокую стоимость.

Выбираем Предмет C: Вес - 23 кг, Стоимость - 120
Итого, оптимальное решение - Предмет C с общей стоимостью 120.

Почему жадный алгоритм не оптимален:

Жадный алгоритм выбирает предметы, которые имеют наибольшее отношение стоимости к весу на текущем этапе,
 но это не всегда приводит к оптимальному решению. В данном случае, он упустил возможность взять Предмет C, 
который, несмотря на более высокий вес, имел более высокую стоимость и мог бы увеличить общую стоимость рюкзака.

Таким образом, жадный алгоритм не всегда дает точное оптимальное решение в задаче о рюкзаке из-за своего ограниченного
 способа выбора предметов на каждом шаге. Для получения точного оптимального решения в таких случаях требуется использовать
 более сложные методы, такие как динамическое программирование или полный перебор.